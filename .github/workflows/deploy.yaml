name: "Build and deploy ðŸš€"

on:
    workflow_dispatch: ~
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: 'ubuntu-latest'
        env:
            APP_ENV: prod
            BRANCH: ${{ github.ref_name }}
        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@2.23.0
              with:
                  coverage: "none"
                  extensions: intl, pdo_sqlite, ctype, iconv
                  php-version: 8.2
                  tools: composer:v2

            - name: "Composer install"
              run: composer install --no-dev --optimize-autoloader --no-interaction

            - name: "Compile CSS and Javascript"
              run: |
                  yarn install
                  yarn build

            - name: "Create deployment artifact"
              uses: thedoctor0/zip-release@master
              with:
                  type: 'zip'
                  filename: app-latest.zip
                  exclusions: '*.git* /*node_modules/* /*tests/* /*var/cache/*'

            - name: "Store artifact for distribution"
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.HOST }}
                username: ${{ secrets.SSH_USERNAME }}
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                port: ${{ secrets.SSH_PORT }}
                source: app-latest.zip
                target: "$HOME/build"

    deploy:
        runs-on: 'ubuntu-latest'
        environment:
            name: production
            url: https://jobbsy.dev
        needs: ['build']
        env:
            ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3

            - name: Create Sentry release
              uses: getsentry/action-release@v1
              env:
                SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
                SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
              with:
                environment: production

            - name: Install SSH key
              uses: shimataro/ssh-key-action@v2
              with:
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                known_hosts: ${{ secrets.KNOWN_HOSTS }}

            - name: Adding Known Hosts
              run: "ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts"

            - name: "Setup Ansible"
              run: |
                  echo "$ANSIBLE_VAULT_PASSWORD" > .ansible/.vault_pass
                  ansible-galaxy install -r .ansible/requirements.yml

            - name: "Deploy"
              run: make deploy
